{"version":3,"sources":["components/PersonFilter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/ErrorMessage.js","services/phonebook.js","App.js","index.js"],"names":["PersonFilter","personFilter","setPersonFilter","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","addPerson","onSubmit","type","Person","person","deletePerson","name","number","onClick","Persons","persons","map","key","ErrorMessage","message","text","className","classname","baseURL","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","setPersons","errorMessage","setErrorMessage","useEffect","phonebookService","initialPhonebook","displayErrorMessage","errorType","setTimeout","filteredPersons","filter","toLocaleLowerCase","includes","preventDefault","tempPerson","find","undefined","returnedPerson","concat","window","confirm","reponse","catch","error","delPerson","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d062bbaf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonFilter = ({ personFilter, setPersonFilter }) => {\r\n  const handleFilterChange = (event) => setPersonFilter(event.target.value)\r\n\r\n  return (\r\n    <div>\r\n      filter show with <input\r\n        value={personFilter}\r\n        onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonFilter","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, setNewName, newNumber, setNewNumber, addPerson }) => {\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input\r\n                    value={newName}\r\n                    onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input\r\n                    value={newNumber}\r\n                    onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n\r\n  return (\r\n    persons.map(person => <div key={person.name}>\r\n      <Person\r\n        person={person}\r\n        deletePerson={deletePerson(person)} />\r\n    </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    if (message.text === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={message.classname}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import axios from 'axios'\r\n\r\n// const baseURL = 'https://phonebook-jt.herokuapp.com/api/persons'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject) => {\r\n    const request = axios.put(`${baseURL}/${newObject.id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport PersonFilter from './components/PersonFilter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport ErrorMessage from './components/ErrorMessage'\nimport phonebookService from './services/phonebook'\n\nconst App = () => {\n  const [personFilter, setPersonFilter] = useState('')\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState({ text: null, classname: \"\" })\n\n  useEffect(() => {\n    phonebookService.getAll()\n      .then(initialPhonebook => setPersons(initialPhonebook))\n  }, [])\n\n  const displayErrorMessage = (text, errorType) => {\n    setErrorMessage({ text, classname: errorType })\n    setTimeout(() => {\n      setErrorMessage({ text: null, classname: \"\" })\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const tempPerson = persons.find(person =>\n      person.name.toLocaleLowerCase() === newName.toLocaleLowerCase())\n\n    if (tempPerson === undefined) {\n      const newPerson = { name: newName, number: newNumber }\n      phonebookService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          displayErrorMessage(`Added ${returnedPerson.name}`, \"success\")\n        })\n\n    } else {\n      if (window.confirm(`${newName} is already added in phonebook, replace old number with new one?`)) {\n        phonebookService.update({ ...tempPerson, number: newNumber })\n          .then(reponse => {\n            setPersons(persons.map(person => person.id !== tempPerson.id ? person : reponse))\n          })\n          .catch(error => {\n            displayErrorMessage(`Information of ${tempPerson.name} has already been removed from server`, \"error\")\n            setPersons(persons.filter(person => person.id !== tempPerson.id))\n          })\n      }\n    }\n  }\n\n  const deletePerson = (delPerson) => {\n    return () => {\n      if (window.confirm(`Delete ${delPerson.name}?`)) {\n        phonebookService.remove(delPerson.id)\n        const newPersons = persons.filter(person => person.id !== delPerson.id)\n        setPersons(newPersons)\n      }\n    }\n  }\n\n  let filteredPersons = persons.filter(person =>\n    person.name.toLocaleLowerCase().includes(personFilter.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ErrorMessage message={errorMessage} />\n      <PersonFilter\n        personFilter={personFilter}\n        setPersonFilter={setPersonFilter} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        addPerson={addPerson} />\n      <h2>Numbers</h2>\n      <Persons\n        persons={filteredPersons}\n        deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}